# - Try to find ShSDK_Editor
# Once done this will define
#  SHSDK_EDITOR_FOUND - System has ShSDK
#  SHSDK_EDITOR_LIBRARIES - The libraries needed to use ShSDK
#  SHINE_EDITOR_EXT_DIR - The path to the ShGameEditor's Extension directory

if(CMAKE_SYSTEM_NAME MATCHES "Windows")
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}/win32")
elseif(CMAKE_SYSTEM_NAME MATCHES "Linux")
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}/linux")
elseif(CMAKE_SYSTEM_NAME MATCHES "WindowsStore")
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}/uwp")
elseif(CMAKE_SYSTEM_NAME MATCHES "Durango")
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}/xboxone")
elseif(CMAKE_SYSTEM_NAME MATCHES "ORBIS")
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}/ps4")
elseif(CMAKE_SYSTEM_NAME MATCHES "PSP2")
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}/psvita")
elseif(CMAKE_SYSTEM_NAME MATCHES "Android")
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}/android")
elseif(DEFINED IOS)
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}/ios")
else(CMAKE_SYSTEM_NAME MATCHES "Windows")
	set(SHINE_BASE_DIR_PLATFORM "$ENV{SHINE_BASE_DIR}")
endif(CMAKE_SYSTEM_NAME MATCHES "Windows")

if(CMAKE_SYSTEM_NAME MATCHES "Linux")
	if(EXISTS "/lib/x86_64-linux-gnu")
		string(REPLACE "-linux-gnu" "" BUILD_ARCHITECTURE ${CMAKE_LIBRARY_ARCHITECTURE})
		set(SHINE_BASE_DIR_PLATFORM_ARCH "${SHINE_BASE_DIR_PLATFORM}/${BUILD_ARCHITECTURE}")
	else(EXISTS "/lib/x86_64-linux-gnu")
		set(SHINE_BASE_DIR_PLATFORM_ARCH "${SHINE_BASE_DIR_PLATFORM}/${CMAKE_LIBRARY_ARCHITECTURE}")
	endif(EXISTS "/lib/x86_64-linux-gnu")
else(CMAKE_SYSTEM_NAME MATCHES "Linux")
	set(SHINE_BASE_DIR_PLATFORM_ARCH "${SHINE_BASE_DIR_PLATFORM}/${CMAKE_LIBRARY_ARCHITECTURE}")
endif(CMAKE_SYSTEM_NAME MATCHES "Linux")

find_path(SHINE_ROOT_DIR NAMES include lib HINTS ENV SHINE_BASE_DIR ${SHINE_BASE_DIR_PLATFORM_ARCH})
if(NOT SHINE_ROOT_DIR)
	message(FATAL_ERROR "Could not locate root directory for ShineExternal")
endif(NOT SHINE_ROOT_DIR)

# ------------------------------------------------------------------------------------------------

find_library(SHCORE_EDITOR_LIBRARY NAMES ShCore_Editor HINTS ${SHINE_ROOT_DIR})
find_library(SHSDK_EDITOR_LIBRARY NAMES ShSDK_Editor HINTS ${SHINE_ROOT_DIR})
find_library(SHCOMPILER_EDITOR_LIBRARY NAMES ShCompiler_Editor HINTS ${SHINE_ROOT_DIR})

find_library(SHCORE_EDITOR_LIBRARY_DEBUG NAMES ShCore_Editor_Debug HINTS ${SHINE_ROOT_DIR})
find_library(SHSDK_EDITOR_LIBRARY_DEBUG NAMES ShSDK_Editor_Debug HINTS ${SHINE_ROOT_DIR})
find_library(SHCOMPILER_EDITOR_LIBRARY_DEBUG NAMES ShCompiler_Editor_Debug HINTS ${SHINE_ROOT_DIR})

set(SHSDK_EDITOR_LIBRARIES "debug;${SHCORE_EDITOR_LIBRARY_DEBUG}" "debug;${SHSDK_EDITOR_LIBRARY_DEBUG}" "debug;${SHCOMPILER_EDITOR_LIBRARY_DEBUG}" "optimized;${SHCORE_EDITOR_LIBRARY}" "optimized;${SHSDK_EDITOR_LIBRARY}" "optimized;${SHCOMPILER_EDITOR_LIBRARY}" CACHE PATH "ShSDK Editor libraries") # ugly
set(SHINE_EDITOR_EXT_DIR "${SHINE_ROOT_DIR}/Bin/Extensions" CACHE PATH "Extension directory") # ugly too
file(MAKE_DIRECTORY ${SHINE_EDITOR_EXT_DIR})

include(FindPackageHandleStandardArgs)

find_package_handle_standard_args(ShSDK_Editor DEFAULT_MSG SHSDK_EDITOR_LIBRARIES SHINE_EDITOR_EXT_DIR)