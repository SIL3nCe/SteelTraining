
<!--- // Singletexture.glfx -->
<glfx>

<input name="VS_INPUT">
	<field name="POSITION" lname="position" type="vec4" />
<!--	<field name="TEXCOORD0" lname="texcoord" type="vec2" />
	<field name="TANGENT" lname="tangent" type="vec3" />
	<field name="BINORMAL" lname="binormal" type="vec3" />
	<field name="NORMAL" lname="normal" type="vec3" /> -->
	<field name="COLOR" lname="color" type="vec4" />
</input>

<output name="VS_OUTPUT_VC">
	<field name="POSITION" lname="position" type="vec4" prec="highp" />
	<field name="COLOR" lname="color" type="vec4" prec="mediump" />
</output>

<output name="VS_OUTPUT">
	<field name="POSITION" lname="position" type="vec4" prec="highp" />
</output>

<code><![CDATA[
//--------------------------------------------------------------------------------------------------
// Pick buffer
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
// Parameters
//--------------------------------------------------------------------------------------------------
uniform highp mat4  	mWorldViewProjection;
uniform mediump vec4	DiffuseColor;

//--------------------------------------------------------------------------------------------------
// Vertex shader code
//--------------------------------------------------------------------------------------------------
VS_OUTPUT_VC vsVC(VS_INPUT vIn)
{
	VS_OUTPUT_VC vOut;
	vOut.position = vIn.position * mWorldViewProjection;
	vOut.color    = vIn.color;
	return(vOut);
}

VS_OUTPUT vs(VS_INPUT vIn)
{
	VS_OUTPUT vOut;
	vOut.position = vIn.position * mWorldViewProjection;
	return(vOut);
}

//--------------------------------------------------------------------------------------------------
// Pixel shader code
//--------------------------------------------------------------------------------------------------
lowp vec4 psVC(VS_OUTPUT_VC vIn)
{
	return(DiffuseColor * vIn.color);
}

lowp vec4 ps(VS_OUTPUT vIn)
{
	return(DiffuseColor);
}

]]></code>

<tech name="DefaultTechnique">
	<vs name="vsVC" input="VS_INPUT" output="VS_OUTPUT_VC" />
	<ps name="psVC" />
</tech>

<tech name="DefaultTechniqueNoVertexColor">
	<vs name="vs" input="VS_INPUT" output="VS_OUTPUT" />
	<ps name="ps" />
</tech>

</glfx>
